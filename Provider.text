

//1- start  in main.dart
class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);
 
  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (context) {return Cart();},
      child: MaterialApp(
        debugShowCheckedModeBanner: false,
        home: Home(),
      ),
    );
  }
}
//2 - create class use the provider like this
class Cart with ChangeNotifier {
  List selectedProducts = [];
  double price = 0.0;

  add(Item product) {
    selectedProducts.add(product);
    price += product.price;
    price = double.parse((price).toStringAsFixed(2));
    // to listenr for every change
    notifyListeners();
  }

  delete(Item product) {
    selectedProducts.remove(product);
    price -= product.price;
    price = double.parse((price).toStringAsFixed(2));
   // to listenr for every change
    notifyListeners();
  }

  // make abbrevaition for the variable 'selectedProducts.length'
  get itemCount {
    return selectedProducts.length;
  }
}

// 3- add provider in the page like this, now carttt like as class Cart 
final carttt = Provider.of<Cart>(context);
 
 // 4 use the functions in class Card with variable carttt
 trailing: IconButton(
                        color: Color.fromARGB(255, 62, 94, 70),
                        onPressed: () {
                          carttt.add(items[index]);
                        },
  
  // 3- or we use the consumer like this, it is better for performence
   trailing:
                          Consumer<Cart>(builder: ((context, Carttt, child) {
                        return IconButton(
                            color: Color.fromARGB(255, 62, 94, 70),
                            onPressed: () {
                              Carttt.add(items[index]);
                            },
                            icon: Icon(Icons.add));
                      })),

// -------------------------------------------------------------------------------------------------------------------------

//Steps to get data from firestore(Database) into responsive.dart using provider

1- In main.dart
 return ChangeNotifierProvider(
    create: (context) {return ClassName();},
    child: MaterialApp(home: Home(),),
);

2- provider>user_provider.dart
 class UserProvider with ChangeNotifier {
  UserData? _userData;
  UserData? get getUser => _userData;
  
  refreshUser() async {
    UserData userData = await AuthMethods().getUserDetails();
    _userData = userData;
    notifyListeners();
  }
 }
 3- firebase_services>auth.dart
 // functoin to get user details from Firestore (Database)
Future<UserData> getUserDetails() async {
   DocumentSnapshot snap = await FirebaseFirestore.instance.collection('userSSS').doc(FirebaseAuth.instance.currentUser!.uid).get(); 
   return UserData.convertSnap2Model(snap);
 }

4- models>user.dart
 // function that convert "DocumentSnapshot" to a User
// function that takes "DocumentSnapshot" and return a User
 
 static    convertSnap2Model(DocumentSnapshot snap) {
 var snapshot = snap.data() as Map<String, dynamic>;
 return UserData(
  email: snapshot["..."],
  username: snapshot["..."],);
 }

 5- In responsive.dart
// To get data from DB using provider
 getDataFromDB() async {
 UserProvider userProvider = Provider.of(context, listen: false);
 await userProvider.refreshUser();
 }

 @override
 void initState() {
    super.initState();
    getDataFromDB();
 }

 6- ÙŠØªÙ… ØªØ®Ø²ÙŠÙ† Ø§Ù„Ù€data Ø¨Ø¯Ø§Ø®Ù„ Ù‡Ø°Ø§ Ø§Ù„Ù€ variable ðŸ‘‡

final allDataFromDB = Provider.of<UserProvider>(context).getUser;

